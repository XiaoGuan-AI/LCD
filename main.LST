C51 COMPILER V9.01   MAIN                                                                  12/07/2021 20:59:57 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: G:\danpianji\keil\C51\BIN\C51.EXE main.c BROWSE INCDIR(G:\danpianji\keil\C51\INC;G:\danpianji\keil\
                    -C51\INC\Atmel) DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #define uint unsigned int
   4          #define uchar unsigned char
   5          #define DATA P0 //LCD12864数据线       
   6          sbit RS=P2^2; // 数据\指令 选择       
   7          sbit RW=P2^1; // 读\写 选择          
   8          sbit EN=P2^0; // 读\写使能       
   9          sbit cs1=P2^4; // 片选1         
  10          sbit cs2=P2^3; // 片选2         
  11          /**********定义中文字库************/
  12          uchar code Hzk[]={
  13          0x10,0x10,0xD0,0xFF,0x90,0x10,0x00,0xFE,0x22,0x22,0x22,0x22,0x22,0xFF,0x02,0x00,
  14          0x04,0x03,0x00,0xFF,0x00,0x01,0x00,0xFF,0x42,0x42,0x42,0x42,0x42,0xFF,0x00,0x00,
  15          /*以上为"相"的点阵*/
  16          0x80,0x40,0x20,0xF8,0x07,0x24,0x24,0x24,0x25,0x26,0x24,0x24,0xB4,0x26,0x04,0x00,
  17          0x00,0x00,0x00,0xFF,0x00,0x01,0xFD,0x45,0x45,0x45,0x45,0x45,0xFD,0x01,0x00,0x00,
  18          /*以上为"信"的点阵*/
  19          0x00,0x00,0x00,0xF8,0x48,0x4C,0x4A,0x49,0x48,0x48,0x48,0xFC,0x08,0x00,0x00,0x00,
  20          0x00,0x00,0x00,0xFF,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xFF,0x00,0x00,0x00,0x00,
  21          /*以上为"自"的点阵*/
  22          0x00,0x04,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0xFE,0x04,0x00,0x00,0x00,
  23          0x00,0x00,0x3F,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x41,0x40,0x70,0x00,0x00,
  24          /*以上为"己"的点阵*/
  25          0x40,0x48,0x48,0x48,0xFF,0x48,0x68,0x40,0x0C,0x30,0xC0,0x30,0x0E,0x00,0x00,0x00,
  26          0x40,0x30,0x0F,0x08,0x1F,0x22,0x42,0x48,0x44,0x43,0x40,0x41,0x46,0x6C,0x20,0x00,
  27          /*以上为"赵"的点阵*/
  28          0x40,0x42,0xCC,0x00,0x04,0xFF,0x04,0x04,0xFC,0x00,0xFC,0x04,0x04,0xFE,0x04,0x00,
  29          0x40,0x20,0x1F,0x28,0x44,0x43,0x48,0x50,0x4F,0x40,0x5F,0x48,0x48,0x6F,0x20,0x00,
  30          /*以上为"迦"的点阵*/
  31          0x04,0xE4,0x24,0x24,0x64,0xA4,0x24,0x3F,0x24,0xA4,0x64,0x24,0x24,0xF6,0x24,0x00,
  32          0x00,0xFF,0x00,0x09,0x09,0x09,0x09,0x7F,0x09,0x09,0x09,0x49,0x80,0x7F,0x00,0x00,
  33          /*以上为"南"的点阵*/
  34          0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0xFE,0xFE,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,
  35          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  36          /*以上为"！"的点阵*/
  37          };
  38          
  39          /*状态检查，LCD是否忙*/
  40          void CheckState()               
  41          {
  42   1      uchar dat;//状态信息（判断是否忙）
  43   1            RS=0; // 数据\指令选择，D/I（RS）="L" ，表示 DB7∽DB0 为显示指令数据 
  44   1            RW=1; //R/W="H"，E="H"数据被读到DB7∽DB0              
  45   1      do{
  46   2           DATA=0x00;
  47   2           EN=1;      //EN下降源      
  48   2              _nop_(); //一个短延时     
  49   2              dat=DATA;
  50   2           EN=0;
  51   2      dat=0x80 &dat; //仅当第7位为0时才可操作(判别busy信号)          
  52   2      }while(!(dat==0x00));
  53   1      }
  54           /*写命令到LCD中*/
C51 COMPILER V9.01   MAIN                                                                  12/07/2021 20:59:57 PAGE 2   

  55          SendCommandToLCD(uchar com)
  56          {
  57   1      CheckState();//状态检查，LCD是否忙       
  58   1         RS=0;         //向LCD发送命令。RS=0写指令，RS=1写数据         
  59   1         RW=0;//R/W="L" ，E="H→L"数据被写到 IR 或 DR 
  60   1         DATA=com;     //com :命令       
  61   1         EN=1;   
  62   1         _nop_();
  63   1         _nop_(); 
  64   1         EN=0;  //EN下降源  
  65   1         return 0;//后加入  
  66   1      }
  67           /*设置页 0xb8是页的首地址*/
  68          void SetLine(uchar page)        
  69          {
  70   1        page=0xb8|page; //1011 1xxx 0<=page<=7 设定页地址--X 0-7,8行为一页64/8=8，共8页              
  71   1      SendCommandToLCD(page);
  72   1      }
  73           /*设定显示开始行，0xc0是行的首地址*/          
  74          void SetStartLine(uchar startline)      
  75          {
  76   1      startline=0xc0|startline; //1100 0000     
  77   1      SendCommandToLCD(startline); //设置从哪行开始：0--63，一般从0 行开始显示           
  78   1      }
  79           /*设定列地址--Y 0-63 ，0x40是列的首地址*/             
  80          void SetColumn(uchar column)    
  81          {
  82   1        column=column &0x3f; //column最大值为64，越出 0=<column<=63         
  83   1      column= 0x40|column; //01xx xxxx
  84   1      SendCommandToLCD(column);
  85   1      }
  86           /*开关显示，0x3f是开显示，0x3e是关显示*/
  87          void SetOnOff(uchar onoff)      
  88          {
  89   1              onoff=0x3e|onoff; //0011 111x,onoff只能为0或者1        
  90   1              SendCommandToLCD(onoff);
  91   1      }
  92          /*写显示数据 */
  93          void WriteByte(uchar dat)       
  94          {
  95   1      CheckState();//状态检查，LCD是否忙       
  96   1         RS=1; //RS=0写指令，RS=1写数据        
  97   1         RW=0;////R/W="L" ，E="H→L"数据被写到 IR 或 DR 
  98   1         DATA=dat;//dat:显示数据     
  99   1         EN=1; 
 100   1         _nop_();
 101   1         _nop_();
 102   1         EN=0;//EN下降源
 103   1      }
 104          /*选择屏幕screen: 0-全屏,1-左屏,2-右屏*/
 105          void SelectScreen(uchar screen) 
 106          {                                               
 107   1      switch(screen)
 108   1         { case 0: cs1=0;//全屏显示  
 109   2                   _nop_(); _nop_(); _nop_(); 
 110   2                   cs2=0; 
 111   2                   _nop_(); _nop_(); _nop_(); 
 112   2      break; 
 113   2           case 1: cs1=0;//左显示屏    
 114   2                   _nop_(); _nop_(); _nop_(); 
 115   2                   cs2=1;
 116   2                   _nop_(); _nop_(); _nop_(); 
C51 COMPILER V9.01   MAIN                                                                  12/07/2021 20:59:57 PAGE 3   

 117   2      break;
 118   2           case 2: cs1=1;//右显示屏     
 119   2                   _nop_(); _nop_(); _nop_(); 
 120   2                   cs2=0;
 121   2                   _nop_(); _nop_(); _nop_(); 
 122   2      break;
 123   2         }
 124   1      }
 125           /*清屏screen: 0-全屏,1-左屏,2-右*/                    
 126          void ClearScreen(uchar screen)  
 127          {       
 128   1      uchar i,j;
 129   1      SelectScreen(screen);
 130   1               for(i=0;i<16;i++)       //控制页数0-7，共8页      
 131   1               {
 132   2              SetLine(i);
 133   2                              SetColumn(0);
 134   2                    for(j=0;j<64;j++)    //控制列数0-63，共64列       
 135   2                                {
 136   3      WriteByte(0x00); //写点内容，列地址自动加1       
 137   3                    }
 138   2           } 
 139   1      }
 140          /*延时程序*/
 141          void    delay(uint z)           
 142          {
 143   1              uint i,j;
 144   1              for(i=0; i<z; i++)
 145   1                      for(j = 0; j < 110; j++);
 146   1      }
 147          /*初始化LCD*/
 148          void InitLCD()  
 149          { 
 150   1              CheckState();
 151   1              SelectScreen(0);
 152   1              SetOnOff(0); //关显示     
 153   1              SelectScreen(0);
 154   1              SetOnOff(1); //开显示   
 155   1              SelectScreen(0);         
 156   1              ClearScreen(0);//清屏   
 157   1              SetStartLine(0); //开始行:0    
 158   1      }
 159          /*显示全角汉字*/ 
 160           void Display(uchar ss,uchar page,uchar column,uchar number) 
 161           {
 162   1               int i; //选屏参数，page选页参数，column选列参数，number选第几汉 字输出 
 163   1               SelectScreen(ss);
 164   1               column=column&0x3f; 
 165   1               SetLine(page); //写上半页 
 166   1         SetColumn(column); //控制列 
 167   1       for(i=0;i<16;i++) //控制16列的数据输出
 168   1       {
 169   2              WriteByte(Hzk[i+32*number]);
 170   2       } //i+32*number汉字的前16个数据输出 
 171   1              SetLine(page+1); //写下半页 
 172   1              SetColumn(column); //控制列 
 173   1              for(i=0;i<16;i++) //控制16列的数据输出
 174   1             {
 175   2                WriteByte(Hzk[i+32*number+16]);}//i+32*number+16汉字的后16个数据 输出
 176   1             }
 177          
 178          /*主函数*/
C51 COMPILER V9.01   MAIN                                                                  12/07/2021 20:59:57 PAGE 4   

 179          void main()
 180          {  
 181   1              uint i;
 182   1              InitLCD();//初始12864      
 183   1              ClearScreen(0);//清屏    
 184   1              while(1)
 185   1              {   
 186   2                    for(i=0;i<128;i++) //12864有128列，显示开始行从0~128切换，因此可以实现循环显示
 187   2                  {
 188   3      SetStartLine(i);//显示开始行     
 189   3                      Display(2,0,0*16,0);//显示第一个字
 190   3                      Display(2,0,1*16,1);// 显示第二个字
 191   3                      Display(2,0,2*16,2);// 显示第三个字
 192   3                  Display(2,0,3*16,3);//  显示第四个字
 193   3                      Display(1,0,4*16,4);//  显示第五个字
 194   3                      Display(1,0,5*16,5);//  显示第六个
 195   3                      Display(1,0,6*16,6);//  显示第七个
 196   3                      Display(1,0,7*16,7);//  显示第六八个
 197   3      SelectScreen(0);//选择全屏显示
 198   3                    delay(50); //延时 
 199   3            }
 200   2      }
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    475    ----
   CONSTANT SIZE    =    256    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
